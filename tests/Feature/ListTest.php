<?php

namespace Tests\Feature;

use App\Models\User;
use App\Models\UserList;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class ListTest extends TestCase
{
    protected $user;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();

    }

    public function test_welcome_page()
    {
        $response = $this->get('/');

        $response->assertStatus(200);
    }

    public function test_login()
    {
        $formData = [
            'email' => 'nohelpnocry1@gmail.com',
            'password' => 'password'
        ];
        $this->withoutExceptionHandling();
        $this->json('POST',url('api/login'), $formData)->assertStatus(200);
    }

    public function test_fetch_all_user_lists()
    {

        $this
            ->actingAs($this->user, 'sanctum')
            ->getJson('api/lists')
            ->assertOk();
    }
    public function test_store_list()
    {

        $this->actingAs($this->user, 'sanctum');
        $formData=['title'=>'test_title','description'=>'test_description'];
        $response=['status'=>200,'message'=>'success','data'=>$formData];
        $this->json('POST',url('api/lists'), $formData)->assertJson($response)->assertStatus(200);

    }
    public function test_edit_list()
    {

        $this->actingAs($this->user, 'sanctum');
        $list=UserList::factory()->create();
        $formData=['title'=>'test_title','description'=>'test_description'];

        $this->json('PUT',url('api/lists/'.$list->id), $formData)->assertStatus(200);

    }

    public function test_delete_list()
    {
        $this->actingAs($this->user, 'sanctum');
        $list=UserList::factory()->create();

        $this->json('DELETE',url('api/lists/'.$list->id))->assertStatus(200);

    }
    public function test_filter_lists()
    {
        $this->actingAs($this->user, 'sanctum');
        $list=UserList::factory()->create();
        $formData=['title'=>$list->title,'description'=>$list->description,'user_id'=>$list->user_id];

        $this->json('POST',url('api/lists/filter'),$formData)->assertStatus(200);

    }


}
